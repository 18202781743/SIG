name: Get PAT
description: 'Get PAT'
inputs:
  APP_ID:
    required: true
  APP_PRIVATE_KEY:
    required: true
outputs:
  APP_TOKEN:
    description: "Random number"
    value: ${{ steps.get-token.outputs.app_token }}

runs:
  using: 'composite'
  steps:
    - name: install depends for load scripts
      shell: bash
      run: |
        npm install @octokit/rest
        npm install @octokit/auth-app
    - name: Get token using github-script
      id: get-token
      uses: actions/github-script@v6
      env:
        APP_ID: ${{ inputs.APP_ID }}
        APP_PRIVATE_KEY: ${{ inputs.APP_PRIVATE_KEY }}
      with:
        script: |
          const { Octokit } = require("@octokit/rest");
          const { createAppAuth } = require("@octokit/auth-app");
          const appOctokit = new Octokit({
            authStrategy: createAppAuth,
            auth: {
              appId: process.env.APP_ID,
              privateKey: process.env.APP_PRIVATE_KEY,
            }
          });
          const app_installation = await appOctokit.rest.apps.getRepoInstallation({
            owner: context.payload.organization.login,
            repo: context.payload.repository.name
          });
          const { token } = await appOctokit.auth({
            type: "installation",
            installationId: app_installation.data.id
          });
          core.setSecret(token);
          core.setOutput('app_token', token);
